{"name":"Gusteau","tagline":"A tasteful Chef Solo wrapper and configuration manager","body":"Gusteau is an easy to use configuration manager for Chef Solo and Vagrant. It aims to:\r\n\r\n* Provide existing Chef Solo users with a more efficient workflow\r\n* Make Chef Solo usable for a small to mid scale multi-node setup\r\n* Make Chef Solo more accessible for the new users\r\n\r\nSome of the features include:\r\n\r\n* YAML for readable, flexible infrastructure configuration\r\n* Usage of a single SSH connection to stream compressed files and commands\r\n* Support for normal Chef CLI flags:\r\n  * `-W` or `--why-run` (dry run mode)\r\n  * `-l` for setting a log level and   `-F` for setting an output formatter\r\n* Bootstrapping target systems with Chef-Omnibus or custom scripts.\r\n\r\n\r\n## Getting started\r\n\r\nGusteau is a Ruby gem:\r\n\r\n```\r\ngem install gusteau\r\n```\r\n\r\nThe following command generates an example Chef-repo:\r\n\r\n```\r\ngusteau init project-name\r\n```\r\n\r\nMake sure you read through `project-name/README.md` first.\r\n\r\nA typical `.gusteau.yml` looks like this:\r\n\r\n```\r\nbefore:\r\n  - bundle exec berks install --path ./cookbooks\r\n\r\nenvironments:\r\n  development:\r\n    attributes:\r\n      mysql:\r\n        server_root_password: ASahiweqwqe2\r\n      rvm:\r\n        default_ruby: 1.9.3-p362\r\n      users:\r\n       - linguini\r\n\r\n    run_list:\r\n      - role[base]\r\n      - recipe[mysql::server]\r\n      - recipe[iptables]\r\n\r\n    nodes:\r\n      playground:\r\n        host: 33.33.33.20\r\n        password: omgsecret\r\n```\r\n\r\n\r\n## Converging a server\r\n\r\nThe following command will run the whole run_list on the node.\r\n\r\n```\r\ngusteau converge development-playground\r\n```\r\n\r\nUse the `--bootstrap` or `-b` flag to bootstrap chef-solo (e.g. during the first run).\r\n\r\n## Applying individual recipes\r\n\r\nYou may choose to run a custom run_list instead of the full convergence.\r\n\r\n```\r\ngusteau apply development-playground \"role[base],recipe[oh-my-zsh]\"\r\n```\r\n\r\n## SSH\r\n\r\nGusteau provides a useful shortcut that you may use to ssh into a node. If you haven't got passwordless authentication set up, Gusteau will use `user` and `password` values from the node configuration.\r\n\r\n```\r\ngusteau ssh development-playground\r\n```\r\n\r\nPlease note that `expect` utility must be installed for `gusteau ssh` to work.\r\n\r\nIf you prefer calling ssh directly, you will find the `gusteau ssh_config` subcommand useful:\r\n\r\n```\r\ngusteau ssh_config >> ~/.ssh/config\r\n```\r\n\r\n## Vagrant\r\n\r\nGusteau can save you from writing some Vagrantfile boilerplate code. It also enables you to move node-specific Vagrant configuration away from the Vagrantfile into node definitions.\r\n\r\n```\r\nnodes:\r\n  www:\r\n    vagrant:\r\n      IP: 192.168.100.20\r\n      cpus: 1\r\n      memory: 512\r\n      box_url: 'https://opscode-vm.s3.amazonaws.com/vagrant/opscode_ubuntu-12.04_provisionerless.box'\r\n```\r\n\r\nThe following snippet configures Vagrant for all Gusteau nodes which have `vagrant` sections defined.\r\n\r\n```\r\nVagrant.configure('2') do |config|\r\n  Gusteau::Vagrant.detect(config) do |setup|\r\n    setup.prefix = 'loco'\r\n    setup.defaults.box_url = 'http://example.com/vm/opscode_centos-6.4.box'\r\n  end\r\nend\r\n```\r\n\r\n* The `prefix` option lets you prepend your VirtualBox VMs names, e.g. `loco-nodename`.\r\n* The `defaults` one lets you provide default values for `cpus`, `memory`, `box_url`.\r\n\r\nPlease note that the add-on only works with Vagrant ~> 1.2 and needs gusteau to be installed as a Vagrant plugin:\r\n\r\n```\r\nvagrant plugin install gusteau\r\n```\r\n\r\n## Configuration\r\n\r\n### Before and after hooks\r\n\r\nYou can tell Gusteau to execute specific commands before and / or after `converge` or `apply` take place. They get executed on the host system. Example `.gusteau.yml` snippet:\r\n\r\n```\r\nbefore:\r\n  - bundle exec librarian-chef install\r\n\r\nafter:\r\n  - bundle exec rake spec\r\n```\r\n\r\n### Attributes\r\nIn addition to specifying `attributes` for environments you can set node-specifc ones. They will be deep-merged with environment ones:\r\n\r\n```\r\nenvironments:\r\n  staging:\r\n    attributes:    \r\n      hostname: staging\r\n    nodes:\r\n      one:\r\n        attributes: { hostname: staging-one }\r\n      two:\r\n        attributes: { hostname: staging-two }\r\n```\r\n\r\n### Run lists\r\n\r\nYou can also override `run_list` for specific nodes.\r\n\r\n### Bootstrap script\r\n\r\nBy default, Gusteau installs the [Omnibus Chef](http://www.opscode.com/chef/install/). However if you're targetting an unsupported platform you might want to specify the `platform` value for a node: this invokes a specific [script](https://github.com/locomote/gusteau/tree/master/bootstrap).\r\n\r\nAlternatively, you can specify a custom script in `.gusteau.yml`:\r\n\r\n```\r\nbootstrap: ./scripts/freebsd.sh\r\n```\r\n\r\n### Custom cookbooks path\r\n\r\nBy default, Gusteau uploads and sets Chef Solo up to use cookbooks from `./cookbooks` and `./site-cookbooks` directories. If it doesn't work for you, you can override these values in `.gusteau.yml`:\r\n\r\n```\r\ncookbooks_path: [ './my-cookbooks', '../something-else' ]\r\nroles_path: './base-roles'\r\n```","google":"UA-28635242-2","note":"Don't delete this file! It's used internally to help with page regeneration."}